extends ../layout

block content
  div(class="p-3 mb-0")
    div(class="row")
      if competencia != null         
        h2( class="col-lg-8 ml-0") Editar competencia
      else
         h2( class="col-lg-8 ml-0") Crear competencia
      hr
      div(class="col-lg-4 d-flex justify-content-lg-end")
        a(id="backBtn" class="btn btn-info my-2 fas fa-times-circle" href="/api/competencias")

  form(id="form" action="/api/competencias" class="ml-3" FormMethod="POST")
    div(class="row ")
      div(class="col-lg-6")
        div(class="form-group col-lg-12 pl-0")
          label(for="Descripcion" class="control-label") Descripcion
          if competencia != null
            input(type="hidden", id="competencia", value= JSON.stringify(competencia))
            input(id="Descripcion" type="text" class="form-control col-lg-8" placeHolder="Descripcion de la competencia" value=competencia.Descripcion)
          else
            input(id="Descripcion" type="text" class="form-control col-lg-8" placeHolder="Descripcion de la competencia")
    div(class="form-group col-lg-12 pl-0")
      if competencia != null 
        button(type="submit" class="btn btn-primary col-lg-3 py-2 my-2") Editar
      else
        button(type="submit" class="btn btn-primary col-lg-3 py-2 my-2") Guardar

append scripts
  script.
    $(document).ready(function () {

         const tokenName = "RRHHtoken";
          const addBtn = document.querySelector("#backBtn");
          const url = addBtn.getAttribute('href');
          const token = window.localStorage.getItem(tokenName);
          addBtn.setAttribute("href", `${url+"?token="+token}`);
          const headers = {'Content-Type': 'application/json','x-auth-token': token};
          const redirectUrl = `/api/competencias?token=${token}`;

      let form = document.querySelector("#form");
      let competencia = document.querySelector("#competencia");
      
      form.addEventListener('submit',function (e){
        e.preventDefault();
        let Descripcion = document.querySelector("#Descripcion").value;
        if(Descripcion.length == 0 || Descripcion.length < 3){
          bootbox.alert("la Descripcion debe tener al menos 3 caracteres");
        }else{
          let data = {Descripcion};
            if(competencia != null){
                fetch(`/api/competencias/${JSON.parse(competencia.value)._id}`, {
                    method: 'PUT', 
                    mode: 'cors', 
                    cache: 'no-cache',
                    credentials: 'same-origin',
                    headers: headers,
                    redirect: 'follow',
                    referrer: 'no-referrer',
                    body: JSON.stringify(data)})
                .then(response => response.json())
                .then(data => {
                  if(data !== null && !data.Errmessage){
                    bootbox.alert("Se ha editado la competencia correctamente",() => {
                        window.location = redirectUrl;
                    });
                  }
                  else bootbox.alert(data.Errmessage);
                })
                .catch(err => bootbox.alert('Ha ocurrido un error '+err));
            }else{
              fetch("/api/competencias", {
                    method: 'POST', 
                    mode: 'cors', 
                    cache: 'no-cache',
                    credentials: 'same-origin',
                    headers:headers,
                    redirect: 'follow',
                    referrer: 'no-referrer',
                    body: JSON.stringify(data)})
                .then(response => response.json())
                .then(data => {
                  if(data !== null && !data.Errmessage){
                    bootbox.alert("Se ha creado la competencia correctamente",() => {
                        window.location = redirectUrl;
                    });
                  }
                  else bootbox.alert(data.Errmessage);
                })
                .catch(err => bootbox.alert('Ha ocurrido un error '+err));
            }
          //
        }
      })
    })